{"ast":null,"code":"// configureStore.js\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { autoRehydrate, persistStore } from 'redux-persist';\nimport { localStorage } from 'redux-persist/storages';\nimport { rootReducer } from './Store';\nexport default function configureStore() {\n  // use desired middlewares\n  const middlewares = [];\n  return new Promise((resolve, reject) => {\n    try {\n      const store = createStore(rootReducer, undefined, compose(autoRehydrate(), applyMiddleware(...middlewares)));\n      persistStore(store, {\n        storage: localStorage\n      }, () => resolve(store));\n    } catch (e) {\n      reject(e);\n    }\n  });\n}","map":{"version":3,"sources":["/home/rint/Downloads/React-Router-Version-6-lesson-1/src/configureStore.js"],"names":["createStore","applyMiddleware","compose","autoRehydrate","persistStore","localStorage","rootReducer","configureStore","middlewares","Promise","resolve","reject","store","undefined","storage","e"],"mappings":"AAAA;AACA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,SAASC,aAAT,EAAwBC,YAAxB,QAA4C,eAA5C;AACA,SAASC,YAAT,QAA6B,wBAA7B;AACA,SAASC,WAAT,QAA4B,SAA5B;AAEA,eAAe,SAASC,cAAT,GAA0B;AACvC;AACA,QAAMC,WAAW,GAAG,EAApB;AAEA,SAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtC,QAAI;AACF,YAAMC,KAAK,GAAGZ,WAAW,CACvBM,WADuB,EAEvBO,SAFuB,EAGvBX,OAAO,CACLC,aAAa,EADR,EAELF,eAAe,CAAC,GAAGO,WAAJ,CAFV,CAHgB,CAAzB;AASAJ,MAAAA,YAAY,CACVQ,KADU,EAEV;AAAEE,QAAAA,OAAO,EAAET;AAAX,OAFU,EAGV,MAAMK,OAAO,CAACE,KAAD,CAHH,CAAZ;AAKD,KAfD,CAeE,OAAOG,CAAP,EAAU;AACVJ,MAAAA,MAAM,CAACI,CAAD,CAAN;AACD;AACF,GAnBM,CAAP;AAoBD","sourcesContent":["// configureStore.js\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { autoRehydrate, persistStore } from 'redux-persist';\nimport { localStorage } from 'redux-persist/storages';\nimport { rootReducer } from './Store';\n\nexport default function configureStore() {\n  // use desired middlewares\n  const middlewares = [];\n\n  return new Promise((resolve, reject) => {\n    try {\n      const store = createStore(\n        rootReducer,\n        undefined,\n        compose(\n          autoRehydrate(),\n          applyMiddleware(...middlewares),\n        ),\n      );\n\n      persistStore(\n        store,\n        { storage: localStorage },\n        () => resolve(store)\n      );\n    } catch (e) {\n      reject(e);\n    }\n  });\n}"]},"metadata":{},"sourceType":"module"}